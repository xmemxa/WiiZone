@page "/"
@using Microsoft.EntityFrameworkCore
@using WiiZoneNowy.Data
@inject IDbContextProvider DbContextProvider

<h3 class="mb-4">Dashboard</h3>

@if (isLoading)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="row g-4">
        <div class="col-sm-6 col-md-3">
            <div class="card text-white bg-primary h-100 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">All games</h5>
                    <div class="display-4 fw-bold">@allGamesCount</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card text-white bg-success h-100 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Clients</h5>
                    <div class="display-4 fw-bold">@allClientsCount</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card text-white bg-warning h-100 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Active reservation</h5>
                    <div class="display-4 fw-bold">@activeReservationsCount</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card text-white bg-danger h-100 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Overdue reservations</h5>
                    <div class="display-4 fw-bold">@overdueReservationsCount</div>
                </div>
            </div>
        </div>
    </div>
}
@code {
    private bool isLoading = true;

    private int allGamesCount;
    private int allClientsCount;
    private int activeReservationsCount;
    private int overdueReservationsCount;

    protected override async Task OnInitializedAsync()
    {
        var db = DbContextProvider.GetDbContext();
        var today = DateTime.Today;

        allGamesCount = await db.Games.CountAsync();
        allClientsCount = await db.Clients.CountAsync();
        
        activeReservationsCount = await db.Reservations
            .Where(r => !r.IsReturned && r.EndDate >= today)
            .CountAsync();
        
        overdueReservationsCount = await db.Reservations
            .Where(r => !r.IsReturned && r.EndDate < today)
            .CountAsync();

        isLoading = false;
    }
    
    [Inject] private NavigationManager NavigationManager { get; set; }
}
